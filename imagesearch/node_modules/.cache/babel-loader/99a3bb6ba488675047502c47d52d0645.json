{"ast":null,"code":"var _jsxFileName = \"/Users/anushkajain/Documents/task2-search/src/components/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport { APIKey } from \"../../common/apis/imageApiKey\";\nimport ImageCard from \"../ImageCard/ImageCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addImages, getAllImages } from \"../../features/Images/imageSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tree = () => {\n  _s();\n\n  const title = \"tree\";\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchTitle = async () => {\n      const response = await imageApi.get(`?key=${APIKey}&q=${title}&image_type=photo`).catch(err => {\n        console.log(\"Err :\", err);\n      });\n      dispatch(addImages(response.data));\n    };\n\n    fetchTitle();\n  }, [dispatch]);\n  const images = useSelector(getAllImages);\n  console.log(images);\n  let renderImages = \"\";\n  renderImages = images.hits.length > 0 ? (console.log(\"True condition\"), images.hits.map((image, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n    data: image\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this))) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: images.Error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: renderImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tree, \"wC7aDHOuelo4BeyhRfvdx1POlNw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/Users/anushkajain/Documents/task2-search/src/components/Tree/Tree.js"],"names":["React","useEffect","imageApi","APIKey","ImageCard","useDispatch","useSelector","addImages","getAllImages","Tree","title","dispatch","fetchTitle","response","get","catch","err","console","log","data","images","renderImages","hits","length","map","image","index","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,MAAR,QAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,SAAR,EAAmBC,YAAnB,QAAsC,kCAAtC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,KAAK,GAAC,MAAZ;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,UAAU,GAAG,YAAW;AAC1B,YAAMC,QAAQ,GAAI,MAAMX,QAAQ,CAACY,GAAT,CAAc,QAAOX,MAAO,MAAKO,KAAM,mBAAvC,EACvBK,KADuB,CAChBC,GAAD,IAAQ;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACH,OAHuB,CAAxB;AAIAL,MAAAA,QAAQ,CAACJ,SAAS,CAACM,QAAQ,CAACM,IAAV,CAAV,CAAR;AACH,KAND;;AAOAP,IAAAA,UAAU;AACb,GATQ,EASP,CAACD,QAAD,CATO,CAAT;AAWA,QAAMS,MAAM,GAAGd,WAAW,CAACE,YAAD,CAA1B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,MAAIC,YAAY,GAAE,EAAlB;AAEAA,EAAAA,YAAY,GACZD,MAAM,CAACE,IAAP,CAAYC,MAAZ,GAAmB,CAAnB,IACIN,OAAO,CAACC,GAAR,CAAY,gBAAZ,GACAE,MAAM,CAACE,IAAP,CAAYE,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBAChB,QAAC,SAAD;AAAuB,IAAA,IAAI,EAAED;AAA7B,KAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,UADA,CAFJ,iBAME;AAAA,2BACE;AAAA,gBAAKN,MAAM,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAPF;AAWA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkCN;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMZ,I;UAEeJ,W,EAYFC,W;;;KAdbG,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React,{useEffect} from \"react\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport {APIKey} from \"../../common/apis/imageApiKey\";\nimport ImageCard from \"../ImageCard/ImageCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {addImages, getAllImages} from \"../../features/Images/imageSlice\";\n\nconst Tree = () => {\n    const title=\"tree\";\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        const fetchTitle = async () =>{\n            const response =  await imageApi.get(`?key=${APIKey}&q=${title}&image_type=photo`)\n            .catch((err) =>{\n                console.log(\"Err :\",err);\n            });\n            dispatch(addImages(response.data));\n        };\n        fetchTitle();\n    },[dispatch]);\n\n    const images = useSelector(getAllImages);\n    console.log(images);\n    let renderImages= \"\";\n\n    renderImages =\n    images.hits.length>0? (\n        console.log(\"True condition\"),\n        images.hits.map((image, index) => (\n        <ImageCard key={index} data={image} />\n      ))\n    ) : (\n      <div>\n        <h3>{images.Error}</h3>\n      </div>\n    );\n    return (\n        <div>\n            <div className=\"movie-container\">{renderImages}</div>\n        </div>\n    );\n};\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}