{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport { APIKey } from \"../../common/apis/imageApiKey\";\nimport React from 'react';\nexport const fetchAsyncImages = createAsyncThunk('Images/fetchAsyncImages', async term => {\n  const response = await imageApi.get(`?key=${APIKey}&q=${term}&image_type=photo`);\n  return response.data;\n});\nconst initialState = {\n  images: {\n    \"hits\": []\n  }\n};\nconst imageSlice = createSlice({\n  name: \"Images\",\n  initialState,\n  reducers: {\n    addImages: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.images = payload;\n    }\n  } // extraReducers:{\n  //     [fetchAsyncImages.pending]:() => {\n  //         console.log(\"pending\");\n  //     },\n  //     [fetchAsyncImages.fulfilled]:(state,{payload}) => {\n  //         console.log(\"Success\");\n  //         return { ...state,images:payload};\n  //     },\n  //     [fetchAsyncImages.rejected]:() => {\n  //         console.log(\"Rejected\");\n  //     },\n  // }\n\n});\nexport const {\n  addImages\n} = imageSlice.actions;\nexport const getAllImages = state => state.images.images;\nexport default imageSlice.reducer;","map":{"version":3,"sources":["/Users/anushkajain/Documents/task2-search/src/features/Images/imageSlice.js"],"names":["createSlice","createAsyncThunk","imageApi","APIKey","React","fetchAsyncImages","term","response","get","data","initialState","images","imageSlice","name","reducers","addImages","state","payload","actions","getAllImages","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,MAAR,QAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAC5C,yBAD4C,EAE5C,MAAOK,IAAP,IAAc;AACd,QAAMC,QAAQ,GAAI,MAAML,QAAQ,CAACM,GAAT,CAAc,QAAOL,MAAO,MAAKG,IAAK,mBAAtC,CAAxB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACH,CAL+C,CAAzC;AAOP,MAAMC,YAAY,GAAC;AACfC,EAAAA,MAAM,EAAC;AACH,YAAO;AADJ;AADQ,CAAnB;AAMA,MAAMC,UAAU,GAAEZ,WAAW,CAAC;AAC1Ba,EAAAA,IAAI,EAAC,QADqB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAC,CAACC,KAAD,WAAqB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAC3BD,MAAAA,KAAK,CAACL,MAAN,GAAaM,OAAb;AACH;AAHI,GAHiB,CAQ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnB0B,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAACF,EAAAA;AAAD,IAAcH,UAAU,CAACM,OAA/B;AACP,OAAO,MAAMC,YAAY,GAAEH,KAAD,IAAWA,KAAK,CAACL,MAAN,CAAaA,MAA3C;AACP,eAAeC,UAAU,CAACQ,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport {APIKey} from \"../../common/apis/imageApiKey\";\nimport React from 'react';\n\nexport const fetchAsyncImages = createAsyncThunk(\n    'Images/fetchAsyncImages', \n    async (term)=>{\n    const response =  await imageApi.get(`?key=${APIKey}&q=${term}&image_type=photo`);\n    return response.data;\n});\n\nconst initialState={\n    images:{\n        \"hits\":[],\n    },\n};\n\nconst imageSlice= createSlice({\n    name:\"Images\",\n    initialState,\n    reducers:{ \n        addImages:(state,{payload}) => {\n            state.images=payload;\n        },\n    },\n    // extraReducers:{\n    //     [fetchAsyncImages.pending]:() => {\n    //         console.log(\"pending\");\n    //     },\n    //     [fetchAsyncImages.fulfilled]:(state,{payload}) => {\n    //         console.log(\"Success\");\n    //         return { ...state,images:payload};\n    //     },\n    //     [fetchAsyncImages.rejected]:() => {\n    //         console.log(\"Rejected\");\n    //     },\n    // }\n});\n\nexport const {addImages} = imageSlice.actions;\nexport const getAllImages=(state) => state.images.images;\nexport default imageSlice.reducer;"]},"metadata":{},"sourceType":"module"}