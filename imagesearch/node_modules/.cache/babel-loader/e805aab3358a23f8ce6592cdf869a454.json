{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport { APIKey } from \"../../common/apis/imageApiKey\";\nexport const fetchAsyncImages = createAsyncThunk('Images/fetchAsyncImages', async term => {\n  const response = await imageApi.get(`?key=${APIKey}&q=${term}&image_type=photo`);\n  console.log(response);\n  return response.data;\n});\nconst initialState = {\n  images: {\n    \"hits\": []\n  }\n};\nconst imageSlice = createSlice({\n  name: \"images\",\n  initialState,\n  reducers: {\n    addImages: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.images = payload;\n    }\n  },\n  extraReducers: {\n    [fetchAsyncImages.pending]: () => {\n      console.log(\"pending\");\n    },\n    [fetchAsyncImages.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"Success\");\n      return { ...state,\n        images: payload\n      };\n    },\n    [fetchAsyncImages.rejected]: () => {\n      console.log(\"Rejected\");\n    }\n  }\n});\nexport const {\n  addImages\n} = imageSlice.actions;\nexport const getAllImages = state => state.images.images;\nexport default imageSlice.reducer;","map":{"version":3,"sources":["/Users/anushkajain/Documents/task2-search/src/features/Images/imageSlice.js"],"names":["createSlice","createAsyncThunk","imageApi","APIKey","fetchAsyncImages","term","response","get","console","log","data","initialState","images","imageSlice","name","reducers","addImages","state","payload","extraReducers","pending","fulfilled","rejected","actions","getAllImages","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,MAAR,QAAqB,+BAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAC5C,yBAD4C,EAE5C,MAAOI,IAAP,IAAc;AACd,QAAMC,QAAQ,GAAI,MAAMJ,QAAQ,CAACK,GAAT,CAAc,QAAOJ,MAAO,MAAKE,IAAK,mBAAtC,CAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAQ,CAACI,IAAhB;AACH,CAN+C,CAAzC;AAQP,MAAMC,YAAY,GAAC;AACfC,EAAAA,MAAM,EAAC;AACH,YAAO;AADJ;AADQ,CAAnB;AAMA,MAAMC,UAAU,GAAEb,WAAW,CAAC;AAC1Bc,EAAAA,IAAI,EAAC,QADqB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAC,CAACC,KAAD,WAAqB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAC3BD,MAAAA,KAAK,CAACL,MAAN,GAAaM,OAAb;AACH;AAHI,GAHiB;AAQ1BC,EAAAA,aAAa,EAAC;AACV,KAACf,gBAAgB,CAACgB,OAAlB,GAA2B,MAAM;AAC7BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHS;AAIV,KAACL,gBAAgB,CAACiB,SAAlB,GAA6B,CAACJ,KAAD,YAAqB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAC9CV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAO,EAAE,GAAGQ,KAAL;AAAWL,QAAAA,MAAM,EAACM;AAAlB,OAAP;AACH,KAPS;AAQV,KAACd,gBAAgB,CAACkB,QAAlB,GAA4B,MAAM;AAC9Bd,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AAVS;AARY,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAACO,EAAAA;AAAD,IAAcH,UAAU,CAACU,OAA/B;AACP,OAAO,MAAMC,YAAY,GAAEP,KAAD,IAAWA,KAAK,CAACL,MAAN,CAAaA,MAA3C;AACP,eAAeC,UAAU,CAACY,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport imageApi from \"../../common/apis/imageApi\";\nimport {APIKey} from \"../../common/apis/imageApiKey\";\n\nexport const fetchAsyncImages = createAsyncThunk(\n    'Images/fetchAsyncImages', \n    async (term)=>{\n    const response =  await imageApi.get(`?key=${APIKey}&q=${term}&image_type=photo`);\n    console.log(response);\n    return response.data;\n});\n\nconst initialState={\n    images:{\n        \"hits\":[],\n    },\n};\n\nconst imageSlice= createSlice({\n    name:\"images\",\n    initialState,\n    reducers:{ \n        addImages:(state,{payload}) => {\n            state.images=payload;\n        },\n    },\n    extraReducers:{\n        [fetchAsyncImages.pending]:() => {\n            console.log(\"pending\");\n        },\n        [fetchAsyncImages.fulfilled]:(state,{payload}) => {\n            console.log(\"Success\");\n            return { ...state,images:payload};\n        },\n        [fetchAsyncImages.rejected]:() => {\n            console.log(\"Rejected\");\n        },\n    }\n});\n\nexport const {addImages} = imageSlice.actions;\nexport const getAllImages=(state) => state.images.images;\nexport default imageSlice.reducer;"]},"metadata":{},"sourceType":"module"}